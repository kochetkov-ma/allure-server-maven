import java.time.Duration

plugins {
    id 'java'
    id 'idea'
    id 'com.github.ben-manes.versions' version "$benManesPluginVersion"
    id 'io.github.gradle-nexus.publish-plugin' version "$nexusPluginVersion"
    // https://www.benediktritter.de/maven-plugin-development/#features
    // https://www.baeldung.com/maven-plugin 
    id 'de.benediktritter.maven-plugin-development' version "$mavenPluginDevelopmentVersion"
}

apply from: "$rootDir/gradle/publishing.gradle"

repositories { mavenLocal(); mavenCentral() }

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

mavenPlugin {
    helpMojoPackage = "${project.group}.help"
}

test { useJUnitPlatform() }

dependencies {
    implementation 'org.apache.maven:maven-plugin-api:3.9.8'
    implementation 'org.apache.maven.plugin-tools:maven-plugin-annotations:3.13.1'
    implementation 'org.apache.maven:maven-project:2.2.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    // junit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

idea { module { downloadJavadoc = true; downloadSources = true } }

wrapper { distributionType = Wrapper.DistributionType.BIN; gradleVersion = gradleWrapperVersion }

nexusPublishing {
    packageGroup = "org.brewcode"

    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            stagingProfileId = project.findProperty('stagingProfileId') ?: System.getenv('OSSRH_PROFILE_ID') ?: ''
            username = project.findProperty('ossrhUsername') ?: System.getenv('OSSRH_USERNAME') ?: ''
            password = project.findProperty('ossrhPassword') ?: System.getenv('OSSRH_PASSWORD') ?: ''
        }
    }

    clientTimeout = Duration.ofSeconds(300)
    connectTimeout = Duration.ofSeconds(60)

    transitionCheckOptions {
        maxRetries.set(40)
        delayBetween.set(Duration.ofMillis(5000))
    }
}